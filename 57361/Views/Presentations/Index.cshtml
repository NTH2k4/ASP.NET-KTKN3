@using X.PagedList;
@using X.PagedList.Mvc.Core;
@model IPagedList<_57361.Models.PresentationViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<form asp-action="index" method="get">
    <div class="input-group">
        <input type="text" class="form-control" name="searchString" value="@ViewData["CurrentFilter"]"/>
        <select class="form-select" name="sortOrder">
            <option value="">Topic (A-Z)</option>
            <option value="topic_desc" selected="@(string.Equals(ViewData["CurrentSort"] as string, "topic_desc"))">Topic (Z-A)</option>
            <option value="dura" selected="@(string.Equals(ViewData["CurrentSort"] as string, "dura"))">Duration</option>
            <option value="dura_desc" selected="@(string.Equals(ViewData["CurrentSort"] as string, "dura_desc"))">Duration (decrease)</option>
        </select>
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Topic)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Duration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Slides)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].SpeakerName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Topic)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Duration)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Slides)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SpeakerName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.PresentationId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.PresentationId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.PresentationId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewData["CurrentSort"], searchString = ViewData["CurrentFilter"]}), new PagedListRenderOptions
{
    UlElementClasses = new[] { "pagination" },
    LiElementClasses = new[] { "page-item" },
    PageClasses = new[] { "page-link" }
})